name: CI/CD - Cidades ESGInteligentes

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Run tests
        run: mvn test

      - name: Save JAR name
        run: echo "APP_JAR=$(ls target/*.jar | head -n 1)" >> $GITHUB_ENV

  docker_build_push:
    needs: build_and_test
    runs-on: ubuntu-latest
    env:
      REGISTRY: ${{ vars.REGISTRY }}
      APP_NAME: ${{ vars.APP_NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.APP_NAME }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.APP_NAME }}:latest

      - name: Save tag artifact
        run: echo "${{ github.sha }}" > image_tag.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: image_tag
          path: image_tag.txt

  deploy_azure:
    needs: docker_build_push
    runs-on: ubuntu-latest
    env:
      AZURE_WEBAPP_NAME: ${{ vars.AZURE_WEBAPP_NAME }}
      REGISTRY_IMAGE: ${{ vars.REGISTRY }}/${{ vars.APP_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Download image tag
        uses: actions/download-artifact@v4
        with:
          name: image_tag
          path: .

      - name: Read Tag
        id: gettag
        run: echo "TAG=$(cat image_tag.txt)" >> $GITHUB_OUTPUT

      - name: Deploy container to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: ${{ env.REGISTRY_IMAGE }}:${{ steps.gettag.outputs.TAG }}
